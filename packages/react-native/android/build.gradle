buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { // add this to use snapshots
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61"
    }
}

apply plugin: 'com.android.library'
apply plugin: "kotlin-android"

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
    buildToolsVersion safeExtGet('buildToolsVersion', '28.0.3')
    compileSdkVersion safeExtGet('compileSdkVersion', 28)

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 28)
        versionCode 1
        versionName '7.0.0'
        consumerProguardFiles 'proguard-rules.pro'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        abortOnError true
        warningsAsErrors true
        baseline file("lint-baseline.xml")
    }
}

dependencies {
    // TODO rely on snapshot version when published rather than mavenLocal
    api "com.bugsnag:bugsnag-android:5.0.0-rc-react-native.01-SNAPSHOT"
    api "com.bugsnag:bugsnag-plugin-react-native:5.0.0-rc-react-native.01-SNAPSHOT"
    implementation 'com.facebook.react:react-native:+'

    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:2.28.2"
}

allprojects {
    repositories {
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        mavenLocal()
        jcenter()
        google()
        maven { // add this to use snapshots
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
}

apply plugin: 'checkstyle'

checkstyle {
    toolVersion = "8.18"
}

task("checkstyle", type: Checkstyle) {
    configFile rootProject.file("config/checkstyle/checkstyle.xml")
    source  "src/"
    include "**/*.java"
    exclude "**/external/**/*.java"
    classpath = files()
}
